{"ast":null,"code":"var _jsxFileName = \"/Users/devinrahul/Documents/react/webpage/Covid Tracker/c19t/src/LineGraph.js\",\n  _s = $RefreshSig$();\nimport { elements, Legend } from 'chart.js';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  Legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltopItem, data) {\n        return nu;\n      }\n    }\n  }\n};\nfunction LineGraph() {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => response.json()).then(data => {\n      const chartData = buildChartData(data, 'cases');\n      setData(chartData);\n    });\n  }, []);\n  const buildChartData = (data, casesType = \"cases\") => {\n    const chartData = [];\n    let lastDataPoint;\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    ;\n    return chartData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204,16,52,0.5)\",\n          borderColor: '#CC1034',\n          data: data\n        }]\n      },\n      options: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["elements","Legend","React","useEffect","useState","Line","jsxDEV","_jsxDEV","options","display","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltopItem","data","nu","LineGraph","_s","setData","fetch","then","response","json","chartData","buildChartData","casesType","lastDataPoint","date","cases","newDataPoint","x","y","push","children","datasets","backgroundColor","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devinrahul/Documents/react/webpage/Covid Tracker/c19t/src/LineGraph.js"],"sourcesContent":["import { elements, Legend } from 'chart.js';\nimport React, { useEffect, useState } from 'react'\nimport {Line} from 'react-chartjs-2'\n\n\nconst options ={\n    Legend: {\n        display:false,\n    },\n    elements:{\n        point:{\n            radius: 0,\n        },\n    },\n\n    maintainAspectRatio: false,\n    tooltips:{\n        mode: \"index\",\n        intersect: false,\n        callbacks:{\n            label: function(tooltopItem, data){\n                return nu\n            }\n        }\n    }\n}\n\nfunction LineGraph() {\n\n\n    const [data, setData] = useState({});\n\n\n    useEffect(() =>{\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n        .then((response) => response.json())\n        .then((data) => {\n            const chartData = buildChartData(data, 'cases');\n            setData(chartData);\n\n        })\n    }, [])\n\n    const buildChartData = (data, casesType=\"cases\") =>{\n        const chartData = [];\n        let lastDataPoint;\n        for(let date in data.cases) {\n            if(lastDataPoint){\n                const newDataPoint = {\n                    x: date,\n                    y: data[casesType][date] - lastDataPoint\n                }\n                chartData.push(newDataPoint)\n            }\n\n            lastDataPoint = data[casesType][date];\n        };\n\n        return chartData;\n    }\n\n  return (\n    <div>\n        <Line\n        options={options}\n        data={{datasets:[{\n            backgroundColor: \"rgba(204,16,52,0.5)\",\n            borderColor: '#CC1034',\n            data: data}]}}\n        options\n        ></Line>\n    </div>\n  )\n}\n\nexport default LineGraph"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,UAAU;AAC3C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,IAAI,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,OAAO,GAAE;EACXP,MAAM,EAAE;IACJQ,OAAO,EAAC;EACZ,CAAC;EACDT,QAAQ,EAAC;IACLU,KAAK,EAAC;MACFC,MAAM,EAAE;IACZ;EACJ,CAAC;EAEDC,mBAAmB,EAAE,KAAK;EAC1BC,QAAQ,EAAC;IACLC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAC;MACNC,KAAK,EAAE,SAAAA,CAASC,WAAW,EAAEC,IAAI,EAAC;QAC9B,OAAOC,EAAE;MACb;IACJ;EACJ;AACJ,CAAC;AAED,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAGjB,MAAM,CAACH,IAAI,EAAEI,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAGpCD,SAAS,CAAC,MAAK;IACXqB,KAAK,CAAC,4DAA4D,CAAC,CAClEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEN,IAAI,IAAK;MACZ,MAAMS,SAAS,GAAGC,cAAc,CAACV,IAAI,EAAE,OAAO,CAAC;MAC/CI,OAAO,CAACK,SAAS,CAAC;IAEtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGA,CAACV,IAAI,EAAEW,SAAS,GAAC,OAAO,KAAI;IAC/C,MAAMF,SAAS,GAAG,EAAE;IACpB,IAAIG,aAAa;IACjB,KAAI,IAAIC,IAAI,IAAIb,IAAI,CAACc,KAAK,EAAE;MACxB,IAAGF,aAAa,EAAC;QACb,MAAMG,YAAY,GAAG;UACjBC,CAAC,EAAEH,IAAI;UACPI,CAAC,EAAEjB,IAAI,CAACW,SAAS,CAAC,CAACE,IAAI,CAAC,GAAGD;QAC/B,CAAC;QACDH,SAAS,CAACS,IAAI,CAACH,YAAY,CAAC;MAChC;MAEAH,aAAa,GAAGZ,IAAI,CAACW,SAAS,CAAC,CAACE,IAAI,CAAC;IACzC;IAAC;IAED,OAAOJ,SAAS;EACpB,CAAC;EAEH,oBACErB,OAAA;IAAA+B,QAAA,eACI/B,OAAA,CAACF,IAAI;MACLG,OAAO,EAAEA,OAAQ;MACjBW,IAAI,EAAE;QAACoB,QAAQ,EAAC,CAAC;UACbC,eAAe,EAAE,qBAAqB;UACtCC,WAAW,EAAE,SAAS;UACtBtB,IAAI,EAAEA;QAAI,CAAC;MAAC,CAAE;MAClBX,OAAO;IAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACvB,EAAA,CA9CQD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAgDlB,eAAeA,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}