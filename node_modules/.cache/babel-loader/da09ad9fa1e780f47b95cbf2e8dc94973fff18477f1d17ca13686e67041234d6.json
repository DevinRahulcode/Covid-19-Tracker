{"ast":null,"code":"var _jsxFileName = \"/Users/devinrahul/Documents/react/webpage/Covid Tracker/c19t/src/LineGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from \"numeral\";\nimport { Chart, registerables, elements, Legend, scales } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\nfunction LineGraph({\n  casesType\n}) {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => {\n        return response.json();\n      }).then(data => {\n        let chartData = buildChartData(data, casesType);\n        setData(chartData);\n        console.log(chartData);\n        // buildChart(chartData);\n      });\n    };\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n}\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","useEffect","useState","Line","numeral","Chart","registerables","elements","Legend","scales","jsxDEV","_jsxDEV","register","options","legend","display","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","_s","setData","fetchData","fetch","then","response","json","console","log","children","length","datasets","backgroundColor","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devinrahul/Documents/react/webpage/Covid Tracker/c19t/src/LineGraph.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react'\nimport {Line} from 'react-chartjs-2'\nimport numeral from \"numeral\";\nimport { Chart, registerables, elements, Legend, scales } from 'chart.js';\nChart.register(...registerables);\n\n\nconst options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n          },\n        },\n      ],\n    },\n  };\n  \n  const buildChartData = (data, casesType) => {\n    let chartData = [];\n    let lastDataPoint;\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        chartData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n  };\n  \n  function LineGraph({ casesType }) {\n    const [data, setData] = useState({});\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            let chartData = buildChartData(data, casesType);\n            setData(chartData);\n            console.log(chartData);\n            // buildChart(chartData);\n          });\n      };\n  \n      fetchData();\n    }, [casesType]);\n  \n    return (\n      <div>\n        {data?.length > 0 && (\n          <Line\n            data={{\n              datasets: [\n                {\n                  backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                  borderColor: \"#CC1034\",\n                  data: data,\n                },\n              ],\n            }}\n            options={options}\n          />\n        )}\n      </div>\n    );\n  }\n  \n  export default LineGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}