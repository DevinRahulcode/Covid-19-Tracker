{"ast":null,"code":"var _jsxFileName = \"/Users/devinrahul/Documents/react/webpage/Covid Tracker/c19t/src/LineGraph.js\",\n  _s = $RefreshSig$();\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  Legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltopItem, data) {\n        return numeral(tooltopItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\nconst buildChartData = (data, casesType = \"cases\") => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  ;\n  return chartData;\n};\nfunction LineGraph() {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => {\n        response.json();\n      }).then(data => {\n        let chartData = buildChartData(data, 'cases');\n        setData(chartData);\n      });\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204,16,52,0.5)\",\n          borderColor: '#CC1034',\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["Chart","registerables","register","React","useEffect","useState","Line","numeral","jsxDEV","_jsxDEV","options","Legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltopItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","_s","setData","fetchData","fetch","then","response","json","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","backgroundColor","borderColor","_c","$RefreshReg$"],"sources":["/Users/devinrahul/Documents/react/webpage/Covid Tracker/c19t/src/LineGraph.js"],"sourcesContent":["import { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport React, { useEffect, useState } from 'react'\nimport {Line} from 'react-chartjs-2'\nimport numeral from \"numeral\";\n\n\nconst options ={\n    Legend: {\n        display:false,\n    },\n    elements:{\n        point:{\n            radius: 0,\n        },\n    },\n\n    maintainAspectRatio: false,\n    tooltips:{\n        mode: \"index\",\n        intersect: false,\n        callbacks:{\n            label: function(tooltopItem, data){\n                return numeral(tooltopItem.value).format(\"+0,0\");\n            },\n        },\n    },\n\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time:{\n                    format:\"MM/DD/YY\",\n                    tooltipFormat:\"ll\"\n                },\n            },\n        ],\n        yAxes:[\n            {\n                gridLines: {\n                    display:false,\n                },\n                ticks:{\n                    callback:function(value, index, values){\n                        return numeral(value).format(\"0a\");\n                    },\n                },\n            },\n        ],\n    }\n}\n\n\nconst buildChartData = (data, casesType=\"cases\") =>{\n    let chartData = [];\n    let lastDataPoint;\n    for(let date in data.cases) {\n        if(lastDataPoint){\n            let newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n        }\n\n        lastDataPoint = data[casesType][date];\n    };\n\n    return chartData;\n};\n\n\nfunction LineGraph() {\n    const [data, setData] = useState({});\n\n\n\n    useEffect(() =>{\n\n        const fetchData = async () =>{\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n            .then((response) => {\n                response.json()\n        })\n            .then((data) => {\n                let chartData = buildChartData(data, 'cases');\n                setData(chartData);\n    \n            })\n\n        }\n\n        fetchData();\n        \n    }, []);\n\n\n\n  return (\n    <div>\n    <h1>Graph</h1>\n        <Line\n        options={options}\n        data={{datasets:[{\n            backgroundColor: \"rgba(204,16,52,0.5)\",\n            borderColor: '#CC1034',\n            data: data,\n        }]}}\n        ></Line>\n    </div>\n  )\n}\n\nexport default LineGraph"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}